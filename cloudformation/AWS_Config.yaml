AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for AWS Config with multi-region aggregation'

Parameters:
  RecorderName:
    Type: String
    Default: 'central-config-recorder'
    Description: 'Name of the AWS Config Recorder'

  ConfigRoleArn:
    Type: String
    Default: ''
    Description: 'ARN of the IAM Role for AWS Config'

  AllSupported:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Whether to record all supported AWS resource types'

  IncludeGlobalResourceTypes:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Whether to include global resource types'

  ResourceTypes:
    Type: List<String>
    Default: []
    Description: 'List of specific resource types to record'

  DeliveryFrequency:
    Type: String
    Default: Six_Hours
    AllowedValues:
      - One_Hour
      - Three_Hours
      - Six_Hours
      - Twelve_Hours
      - TwentyFour_Hours
    Description: 'The frequency with which AWS Config delivers configuration snapshots'

  ConfigBucket:
    Type: String
    Default: ''
    Description: 'S3 bucket name for AWS Config data'

  AggregatorName:
    Type: String
    Default: 'central-config-aggregator'
    Description: 'Name of the AWS Config Aggregator'

  AggregatorAccountIds:
    Type: List<String>
    Default: []
    Description: 'List of AWS account IDs to aggregate Config data from'
  
  AggregatorAwsRegions:
    Type: List<String>
    Default: []
    Description: 'List of AWS regions to aggregate Config data from'
  
  IncludeAllAwsRegions:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Whether to include all AWS regions in the Config Aggregator'
  
  CentralizedConfigAccountId:
    Type: String
    Default: ''
    Description: 'Centralized AWS account ID for Config Aggregator'

  CentralizedConfigRegion:
    Type: String
    Default: 'us-east-1'
    Description: 'Centralized AWS region for Config Aggregator'

Conditions:
  IsAllSuported: !Equals
    - !Ref AllSupported
    - 'true'
  IsAllAwsRegions: !Equals
    - !Ref IncludeAllAwsRegions
    - 'true'

  
Resources:
  # AWS Config Recorder
  ConfigRecorder:
    Type: 'AWS::Config::ConfigurationRecorder'
    Properties:
      Name: !Ref RecorderName
      RoleARN: !Ref ConfigRoleArn
      RecordingGroup:
        AllSupported: !Ref AllSupported
        IncludeGlobalResourceTypes: !Ref IncludeGlobalResourceTypes
        ResourceTypes: !If
          - IsAllSuported
          - !Ref AWS::NoValue
          - !Ref ResourceTypes
  
  # AWS Config Delivery Channel
  ConfigDeliveryChannel:
    Type: 'AWS::Config::DeliveryChannel'
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: !Ref DeliveryFrequency
      S3BucketName: !Ref ConfigBucket
  
  # AWS Config Aggregator
  ConfigAggregator:
    Type: 'AWS::Config::ConfigurationAggregator'
    Properties:
      ConfigurationAggregatorName: !Ref AggregatorName
      AccountAggregationSources:
        AccountIds: !Ref AggregatorAccountIds
        AllAwsRegions: !Ref IncludeAllAwsRegions
        AwsRegions: !If
          - IsAllAwsRegions
          - !Ref AWS::NoValue
          - !Ref AggregatorAwsRegions
  
  # AWS Config Aggregator Authorization
  ConfigAggregatorAuthorization:
    Type: 'AWS::Config::AggregatorAuthorization'
    Properties:
      AuthorizedAccountId: !Ref CentralizedConfigAccountId
      AuthorizedAwsRegion: !Ref CentralizedConfigRegion
  
  # AWS Managed Config Rules
  CloudTrailEnabledRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'cloudtrail-enabled'
      Description: 'Ensure CloudTrail is enabled in all regions'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'CLOUD_TRAIL_ENABLED'

  GuardDutyEnabledRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'GuardDuty-enabled'
      Description: 'Ensure CloudTrail is enabled in all supported regions'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'GUARDDUTY_ENABLED_CENTRALIZED'

  SecurityHubEnabledRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'SecurityHub-enabled'
      Description: 'Ensure SecurityHub is enabled in all supported regions'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'GUARDDUTY_ENABLED_CENTRALIZED'

  SecurityHubEnabledRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'SecurityHub-enabled'
      Description: 'Ensure SecurityHub is enabled in all supported regions'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'GUARDDUTY_ENABLED_CENTRALIZED'

  VPCFlowLogsEnabledRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'VPC-flow-logs-enabled'
      Description: 'Ensure VPC Flow Logs are enabled in all VPCs'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'GUARDDUTY_ENABLED_CENTRALIZED'

  S3BlockPublicAccessRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'S3-block-public-access'
      Description: 'Ensure S3 Block Public Access is enabled'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED'
        InputParameters:
          excludePublicBucckets: ''

  DefaultSecurityGroupRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'Default-security-group-check'
      Description: 'Detects usage of default security groups with open access'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED'
        InputParameters:
          excludeRegions: ''
  
  CloudTrailLogValidationRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'cloudtrail-log-file-validation-enabled'
      Description: 'Ensures CloudTrail log file validation is enabled to detect tampering'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED'
  
  ACMExpirationCheckRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'acm-certificate-expiration-check'
      Description: 'Detects ACM certificates nearing expiration'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'ACM_CERTIFICATE_EXPIRATION_CHECK'
        InputParameters:
          daysToExpira: ''

  SecretsRotationEnabledRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'secretsmanager-rotation-enabled'
      Description: 'Ensures Secrets Manager secret rotation is enabled'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'SECRETS_MANAGER_ROTATION_ENABLED'

  IamCredentialExpirationCheckRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'iam-credential-expiration-check'
      Description: 'Detects IAM access keys nearing expiration'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'IAM_USER_UNUSED_CREDENTIALS_CHECK'
        InputParameters:
          maxCredentialUsageAge: ''

  EC2InstanceProfileRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'ec2-instance-profile-attached'
      Description: 'Ensures EC2 instances are launched with an IAM role'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'EC2_INSTANCE_PROFILE_ATTACHED'
  
  IamUserPolicyCheckRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'iam-user-policy-check'
      Description: '"Prevent direct policy attachments to IAM users'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'IAM_USER_NO_POLICIES_CHECK'

  S3versioningEnabledRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 's3-bucket-versioning-enabled'
      Description: 'Ensures S3 bucket versioning is enabled'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'S3_BUCKET_VERSIONING_ENABLED'
  
  NaclRestrictionRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: 'nacl-restriction-check'
      Description: 'Ensures NACLs are not open to the world'
      Source:
        Owner: 'AWS'
        SourceIdentifier: 'NACL_NO_UNRESTRICT_SSH_RDP'
  


  
  

Outputs:
  ConfigBucketName:
    Description: 'Name of S3 bucket for AWS Config data'
    Value: !Ref ConfigBucket
    
  ConfigAggregatorName:
    Description: 'Name of AWS Config Aggregator'
    Value: !Ref ConfigAggregator

    
